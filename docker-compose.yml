version: "3"
services: 
    phpfpm:
        build: .
        volumes:     
            - .:/var/www/html/
            - ./confphp/php.ini:/usr/local/etc/php/php.ini
    nginx:
        image: nginx:latest
        ports:
           - "80:80"
        volumes:
           - .:/var/www/html
           - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
           - phpfpm            

    database:
        image: postgres:${POSTGRES_VERSION:-13}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
            POSTGRES_USER: ${POSTGRES_USER:-symfony}
        volumes:
            - /db:/var/lib/postgresql/data:rw
        ports:
            - "5432:5432"

    encore:
        image: node:19-alpine
        volumes:
            - .:/app:rw
            - ./node_modules:/usr/app/node_modules
        ports:
            - "8082:8080"
        working_dir: /app
        command: ["yarn", "install"]

    adminer:
        image: adminer
        ports:
           - 8080:8080

    typesense:
        image: typesense/typesense:0.23.1
        ports:
            - "8108:8108"
  
        environment:
            TYPESENSE_DATA_DIR: /data
            TYPESENSE_API_KEY: a00c45f7-808e-4e66-8e1f-cf73a334c452               

        volumes:
            - ./testProject/data:/data 

    golang:
        build: 
            context: . 
            dockerfile: ./sync.Dockerfile
        volumes:
            - ./sync-stations:/go/src/app:rw
        ports:
            - 4002:8080
        command: go run cmd/main.go
                   

  
    
